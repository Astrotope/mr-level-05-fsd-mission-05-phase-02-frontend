@use 'sass:map';
@use '@/styles/variables' as *;
@use '@/styles/mixins' as *;

.button {
  @include button-base;
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: map.get($font-sizes, 'base');

  a {
    color: inherit;
    text-decoration: none;
    font-weight: inherit;
  }

  // Size variants
  &.small {
    padding: var(--spacing-xs) var(--spacing-sm);
    font-size: map.get($font-sizes, 'sm');
  }

  &.large {
    padding: var(--spacing-md) var(--spacing-lg);
    font-size: map.get($font-sizes, 'lg');
  }

  // Style variants
  &.primary {
    background-color: var(--primary-color);
    color: white;

    &:hover:not(:disabled) {
      background-color: var(--primary-color-dark);
    }
  }

  &.secondary {
    background-color: var(--secondary-color);
    color: white;

    &:hover:not(:disabled) {
      background-color: var(--secondary-color-dark);
    }
  }

  &.accent {
    background-color: var(--accent-color);
    color: var(--text-color-secondary);

    &:hover:not(:disabled) {
      background-color: var(--primary-color-dark);
    }
  }

  &.outline {
    background-color: transparent;
    border: 1px solid var(--primary-color);
    color: var(--primary-color);

    &:hover:not(:disabled) {
      background-color: var(--primary-color);
      color: white;
    }
  }

  &.text {
    background-color: transparent;
    color: var(--primary-color);
    padding: var(--spacing-xs);

    &:hover:not(:disabled) {
      background-color: rgba(0, 123, 255, 0.1);
    }
  }

  &.fullWidth {
    width: 100%;
  }

  // Handle nested elements
  a {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
  }

  span {
    display: inline-flex;
    align-items: center;
  }
}
